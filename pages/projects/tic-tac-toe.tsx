import Head from "../../node_modules/next/head";
import Details from "../../components/Details";
import React, { useState } from 'react';
import { Board } from "../../components/ttt/Board";
import { ChoosePlayer } from "../../components/ttt/ChoosePlayer";
import { WinnerModal } from "../../components/ttt/WinnerModal";

export default function TTT () {
    const [isX, setIsX] = useState<boolean>(true);
    const [newGame, setNewGame] = useState<boolean>(false);
    const [squares, setSqaures] = useState<Array<any>>(Array(9).fill(null));
  
    let winner = calculateWinner(squares);
  
  
    // handle Choose player
    function handlePlayerX() {
      setIsX(true);
    }
  
    function handlePlayerO() {
      setIsX(false);
    }
  
    //// It will Handle which Icon will apppear on Board on cliking  one the Squares
    function handlePlayer(i: number) {
  
      if (calculateWinner(squares) || squares[i]) {
        return;
      }
  
      squares[i] = isX ? "X" : "O";
      setSqaures(squares);
      setIsX(!isX);
    }
  
    // It will handle the Restart of the Game 
  
    function handleRestartGame() {
      setIsX(true);
      setSqaures(Array(9).fill(null));
    }
  
  
    // It will handle the start Game when the player choose one of the Icon
    // with which they want to player
    function handleNewGame() {
      setIsX(true);
      setSqaures(Array(9).fill(null));
      setNewGame(true);
    };
  
    function handleQuitGame() {
      setIsX(true);
      setSqaures(Array(9).fill(null));
      setNewGame(false);
    }
    // Calculate the winner
    function calculateWinner(squares: Array<any>) {
      // Total 8 winning patterens
      const winningPatterns = [
        [0, 1, 2],
        [3, 4, 5],
        [6, 7, 8],
        [0, 3, 6],
        [1, 4, 7],
        [2, 5, 8],
        [0, 4, 8],
        [2, 4, 6]
      ];
  
      for (let i = 0; i < winningPatterns.length; i++) {
        const [a, b, c] = winningPatterns[i];
  
        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {
          return squares[a];
        }
      }
      return null;
    }

    return (
        <>
            <Details/>
            <section  className="flex min-h-screen flex-col items-center bg-[#1b263b]">
                <Head>
                    <title>Mon Portfolio | Tic-Tac-Toe Project</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>
                <div>
                  <h1 className="text-4xl md:text-6xl font-bold mt-12 text-center text-[#f6ae2d] ">
                    Tic
                    {" "}
                    <span className="text-[#5da9e9]">Tac </span>
                    {" "}
                    Toe
                  </h1>

                  {!newGame
                    ?
                    <ChoosePlayer
                      handleNewGame={handleNewGame}
                      handlePlayerX={handlePlayerX}
                      handlePlayerO={handlePlayerO}
                    />
                    :
                    <Board
                      winner={winner}
                      playerX={isX}
                      squares={squares}
                      handlePlayer={handlePlayer}
                      handleRestartGame={handleRestartGame}
                    />
                  }
                  {winner && 
                  <WinnerModal
                      winner={winner}
                      handleQuitGame={handleQuitGame}
                      handleNewGame={handleNewGame}
                    />
                  }
                </div>
            </section>
        </>
    )  
}